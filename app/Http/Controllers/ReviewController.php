<?php

namespace App\Http\Controllers;

use App\Models\User;
use App\Models\Review;
use App\Models\Trip;
use Illuminate\Http\Request;
use Illuminate\Support\Facades\Auth;


class ReviewController extends Controller
{
    /**
     * âœ… Mostrar la vista de reseÃ±as + viajes realizados por el pasajero
     */
    public function index()
    {
        $user = Auth::user();

        // âœ… Viajes donde el usuario fue pasajero y estÃ¡n finalizados
        $trips = $user->tripsAsPassenger()
            ->where('trips.status', 'Finalizado')   // Incluimos tabla trips para evitar ambigÃ¼edad
            ->with('driver')                        // RelaciÃ³n: Trip->driver()
            ->get();

        // âœ… ReseÃ±as hechas por el usuario autenticado
        $reviews = Review::where('passenger_id', $user->id)
            ->with(['driver', 'trip'])             // Para mostrar nombres del conductor y datos del viaje
            ->get();

        return view('pasajero.resenas.resenas', compact('trips', 'reviews'));
    }

    /**
     * âœ… Guardar la reseÃ±a en la base de datos
     */
    public function store(Request $request)
    {
        $request->validate([
            'trip_id'   => 'required|exists:trips,id',
            'driver_id' => 'required|exists:users,id',
            'rating'    => 'required|integer|min(1)|max(5)',
            'comment'   => 'nullable|string|max:500'
        ]);

        $user = Auth::user();

        // âœ… Verificar que el usuario fue pasajero de ese viaje y que estÃ© finalizado
        $esPasajero = $user->tripsAsPassenger()
            ->where('trips.id', $request->trip_id)
            ->where('trips.status', 'Finalizado') // ğŸ‘ˆ Aseguramos que solo reseÃ±e viajes finalizados
            ->exists();

        if (!$esPasajero) {
            return back()->with('error', 'âš  No puedes reseÃ±ar un viaje que no realizaste o que no ha finalizado.');
        }

        // âœ… Evitar duplicar reseÃ±a para el mismo viaje
        $yaExiste = Review::where('trip_id', $request->trip_id)
            ->where('passenger_id', $user->id)
            ->exists();

        if ($yaExiste) {
            return back()->with('error', 'âš  Ya has calificado este viaje.');
        }

        // âœ… Crear y guardar reseÃ±a
        Review::create([
            'trip_id'      => $request->trip_id,
            'passenger_id' => $user->id,
            'driver_id'    => $request->driver_id,
            'rating'       => $request->rating,
            'comment'      => $request->comment,
        ]);

        return back()->with('success', 'âœ… ReseÃ±a publicada exitosamente.');
    }
}
